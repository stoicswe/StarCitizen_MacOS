From 323485e9bef98ce06ab8279b0409e32919da3e65 Mon Sep 17 00:00:00 2001
From: Vingian <89702391+Vingian@users.noreply.github.com>
Date: Sat, 30 Aug 2025 04:06:18 -0300
Subject: [PATCH] Avoids EAC 60101

Avoids EAC error 60101 due to a timeout waiting for the eac_wine_pid file.
---
 dlls/ntdll/unix/server.c | 27 +++++++++++++++++++++++++++
 dlls/ntdll/unix/thread.c |  4 ++++
 2 files changed, 31 insertions(+)

diff --git a/dlls/ntdll/unix/server.c b/dlls/ntdll/unix/server.c
index 3969c2bb898..da5308ea2a9 100644
--- a/dlls/ntdll/unix/server.c
+++ b/dlls/ntdll/unix/server.c
@@ -1561,6 +1561,31 @@ void process_exit_wrapper( int status )
 }
 
 
+char eac_wine_pid[32] = {0};
+
+void delete_eac_wine_pid(void)
+{
+    if (!eac_wine_pid[0]) return;
+    unlink( eac_wine_pid );
+    eac_wine_pid[0] = 0;
+}
+
+void create_eac_wine_pid( DWORD wine_pid )
+{
+    if (!getenv("EAC_LAUNCHERDIR")) return;
+    if (snprintf( eac_wine_pid, sizeof(eac_wine_pid), "/tmp/eac_wine_pid_%X", getpid() ) != -1)
+    {
+        int fd = open( eac_wine_pid, O_CREAT|O_TRUNC|O_WRONLY, S_IRUSR|S_IWUSR|S_IRGRP|S_IROTH );
+        if (fd != -1)
+        {
+            write( fd, &wine_pid, sizeof(wine_pid) );
+            close( fd );
+            atexit( delete_eac_wine_pid );
+        }
+    }
+}
+
+
 /***********************************************************************
  *           server_init_process
  *
@@ -1685,6 +1710,8 @@ size_t server_init_process(void)
 
     set_thread_id( NtCurrentTeb(), pid, tid );
 
+    create_eac_wine_pid( pid );
+
     for (i = 0; i < supported_machines_count; i++)
         if (supported_machines[i] == current_machine) return info_size;
 
diff --git a/dlls/ntdll/unix/thread.c b/dlls/ntdll/unix/thread.c
index b7f424e1108..e075c51915c 100644
--- a/dlls/ntdll/unix/thread.c
+++ b/dlls/ntdll/unix/thread.c
@@ -1453,11 +1453,15 @@ void abort_thread( int status )
 }
 
 
+extern void delete_eac_wine_pid(void);
+
+
 /***********************************************************************
  *           abort_process
  */
 void abort_process( int status )
 {
+    delete_eac_wine_pid();
     _exit( get_unix_exit_code( status ));
 }
 
